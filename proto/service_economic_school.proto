syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_login_user.proto";
import "rpc_update_user.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "rpc_verify_email.proto";
import "message_economic_school.proto";
import "google/protobuf/empty.proto";
import "user.proto";

option go_package = "economic-school/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Economic School API";
    version: "1.2";
    contact: {
      name: "Yoshikawa Keita";
      url: "https://github.com/Yoshikawa-Keita";
      email: "keita_yoshi@icloud.com";
    };
  };
};

service EconomicSchool {
  rpc HealthCheck (google.protobuf.Empty) returns (HealthCheckResponse) {
    option (google.api.http) = {
      get: "/health"
    };
  }

  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/create_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to create a new user";
      summary: "Create new user";
    };
  }

  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch: "/v1/update_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to update user";
      summary: "Update user";
    };
  }

  rpc UpdateUserEmail (UpdateUserEmailRequest) returns (UpdateUserEmailResponse) {
    option (google.api.http) = {
      patch: "/v1/update_user_email"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to update user";
      summary: "Update user";
    };
  }

  rpc VerifyChangedEmail (VerifyChangedEmailRequest) returns (VerifyChangedEmailResponse) {
    option (google.api.http) = {
      patch: "/v1/verify_changed_email"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to verify changed email";
      summary: "Verify changed email";
    };
  }

  rpc LoginUser (LoginUserRequest) returns (LoginUserResponse) {
    option (google.api.http) = {
      post: "/v1/login_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to login user and get access token & refresh token";
      summary: "Login user";
    };
  }

  rpc RenewAccessToken (RenewAccessTokenRequest) returns (RenewAccessTokenResponse) {
    option (google.api.http) = {
      post: "/v1/renew_access_token"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to renew access token";
      summary: "Renew access token";
    };
  }

  rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse) {
    option (google.api.http) = {
      post: "/v1/verify_email"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to verify user's email address";
      summary: "Verify email";
    };
  }

  rpc CreateExam (CreateExamRequest) returns (Exam) {
    option (google.api.http) = {
      post: "/v1/exams"
      body: "*"
    };
  }
  rpc GetExam (GetExamRequest) returns (Exam) {
    option (google.api.http) = {
      get: "/v1/exams/{exam_id}"
    };
  }
  rpc ListExams (ListExamsRequest) returns (ListExamsResponse) {
    option (google.api.http) = {
      get: "/v1/list_exams"
    };
  }
  rpc UpdateExam (UpdateExamRequest) returns (Exam) {
    option (google.api.http) = {
      put: "/v1/exams/{exam.exam_id}"
      body: "exam"
    };
  }

  rpc DeleteExam (DeleteExamRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/exams/{exam_id}"
    };
  }

  rpc GetSignedUrl (GetSignedUrlRequest) returns (GetSignedUrlResponse) {
    option (google.api.http) = {
      post: "/v1/signed-url"
      body: "*"
    };
  }

  rpc UpsertUserExam (UpsertUserExamRequest) returns (UserExam) {
    option (google.api.http) = {
      post: "/v1/upsert_user_exam"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to insert or update a user's exam status";
      summary: "Insert or update user's exam";
    };
  }

  rpc GetUserExam (GetUserExamRequest) returns (UserExam) {
    option (google.api.http) = {
      get: "/v1/get_user_exam/{username}/{exam_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to retrieve a user's exam status";
      summary: "Retrieve user's exam";
    };
  }

  rpc ListCompletedUserExams (ListCompletedUserExamsRequest) returns (ListCompletedUserExamsResponse) {
    option (google.api.http) = {
      get: "/v1/list_completed_user_exams/{username}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to retrieve a list of completed user's exams";
      summary: "List completed user's exams";
    };
  }

  rpc ListUniversities(google.protobuf.Empty) returns (ListUniversitiesResponse) {
    option (google.api.http) = {
      get: "/v1/list_universities"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to retrieve a list of universities";
      summary: "List universities";
    };
  }

  rpc GetExamCountByUniversity(google.protobuf.Empty) returns (GetExamCountByUniversityResponse) {
    option (google.api.http) = {
      get: "/v1/get_exam_count_by_university"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to retrieve a list of universities with the count of exams for each university";
      summary: "Get exam count by university";
    };
  }

  rpc GetGlobalRanking(google.protobuf.Empty) returns (GetGlobalRankingResponse) {
    option (google.api.http) = {
      get: "/v1/get_global_ranking"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to retrieve the global ranking";
      summary: "Get global ranking";
    };
  }

  rpc GetWeeklyGlobalRanking(google.protobuf.Empty) returns (GetWeeklyGlobalRankingResponse) {
    option (google.api.http) = {
      get: "/v1/get_weekly_global_ranking"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to retrieve the weekly global ranking";
      summary: "Get weekly global ranking";
    };
  }

  rpc GetUniversityRanking(google.protobuf.Empty) returns (GetUniversityRankingResponse) {
    option (google.api.http) = {
      get: "/v1/get_university_ranking"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to retrieve the university ranking";
      summary: "Get university ranking";
    };
  }

  rpc GetWeeklyUniversityRanking(google.protobuf.Empty) returns (GetWeeklyUniversityRankingResponse) {
    option (google.api.http) = {
      get: "/v1/get_weekly_university_ranking"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to retrieve the weekly university ranking";
      summary: "Get weekly university ranking";
    };
  }

  rpc GetUserByUsername (GetUserByUsernameParam) returns (User) {
    option (google.api.http) = {
      get: "/v1/get_user_by_username/{username}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to retrieve a user by username";
      summary: "Retrieve user by username";
    };
  }

  rpc GetUserByEmail (GetUserByEmailParam) returns (User) {
    option (google.api.http) = {
      get: "/v1/get_user_by_email/{email}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to retrieve a user by email";
      summary: "Retrieve user by email";
    };
  }

  rpc SendPasswordResetEmail(SendPasswordResetEmailRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/send_password_reset_email"
      body: "*"
    };
  }

  rpc PasswordResetEmail (PasswordResetEmailRequest) returns (PasswordResetEmailResponse) {
    option (google.api.http) = {
      post: "/v1/password_reset_email"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to reset user's password";
      summary: "Password reset email";
    };
  }



}
