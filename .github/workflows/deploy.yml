name: Deploy to production

on:
  push:
    branches: [ main ]

jobs:

  deploy:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id secretsForEnv --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env


      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: economic-school
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
          docker push -a $REGISTRY/$REPOSITORY

      - name: Build, tag, and push batch docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          BATCH_REPOSITORY: batch-economic-school
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$BATCH_REPOSITORY:$IMAGE_TAG -t $REGISTRY/$BATCH_REPOSITORY:latest -f ./batch/Dockerfile ./batch
          docker push -a $REGISTRY/$BATCH_REPOSITORY
