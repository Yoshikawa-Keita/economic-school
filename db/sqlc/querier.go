// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddAccountBalance(ctx context.Context, arg AddAccountBalanceParams) (Account, error)
	CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error)
	CreateExam(ctx context.Context, arg CreateExamParams) (Exam, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateVerifyEmail(ctx context.Context, arg CreateVerifyEmailParams) (VerifyEmail, error)
	DeleteAccount(ctx context.Context, id int64) error
	DeleteExam(ctx context.Context, examID int32) error
	GetAccount(ctx context.Context, id int64) (Account, error)
	GetAccountForUpdate(ctx context.Context, id int64) (Account, error)
	GetExam(ctx context.Context, examID int32) (Exam, error)
	GetSession(ctx context.Context, id uuid.UUID) (Session, error)
	GetUser(ctx context.Context, username string) (User, error)
	ListAccounts(ctx context.Context, arg ListAccountsParams) ([]Account, error)
	ListExams(ctx context.Context, arg ListExamsParams) ([]Exam, error)
	UpdateAccount(ctx context.Context, arg UpdateAccountParams) (Account, error)
	// -- name: ListExams :many
	// SELECT *
	// FROM exams
	// WHERE
	//     university = sqlc.narg('university')
	//     AND subject = sqlc.narg('subject')
	//     AND year = sqlc.narg('year')
	// ORDER BY exam_id;
	UpdateExam(ctx context.Context, arg UpdateExamParams) (Exam, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UpdateVerifyEmail(ctx context.Context, arg UpdateVerifyEmailParams) (VerifyEmail, error)
}

var _ Querier = (*Queries)(nil)
